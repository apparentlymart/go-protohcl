// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: testschema.proto

package testschema

import (
	_ "github.com/apparentlymart/go-protohcl/protohcl/protohclext"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Root struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name represents an HCL attribute
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Thing represents nested blocks of type "thing"
	Things []*Thing  `protobuf:"bytes,2,rep,name=things,proto3" json:"things,omitempty"`
	More   *MoreRoot `protobuf:"bytes,3,opt,name=more,proto3" json:"more,omitempty"`
}

func (x *Root) Reset() {
	*x = Root{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testschema_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Root) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Root) ProtoMessage() {}

func (x *Root) ProtoReflect() protoreflect.Message {
	mi := &file_testschema_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Root.ProtoReflect.Descriptor instead.
func (*Root) Descriptor() ([]byte, []int) {
	return file_testschema_proto_rawDescGZIP(), []int{0}
}

func (x *Root) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Root) GetThings() []*Thing {
	if x != nil {
		return x.Things
	}
	return nil
}

func (x *Root) GetMore() *MoreRoot {
	if x != nil {
		return x.More
	}
	return nil
}

type Thing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The first label on a nested "thing" block
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Thing) Reset() {
	*x = Thing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testschema_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Thing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Thing) ProtoMessage() {}

func (x *Thing) ProtoReflect() protoreflect.Message {
	mi := &file_testschema_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Thing.ProtoReflect.Descriptor instead.
func (*Thing) Descriptor() ([]byte, []int) {
	return file_testschema_proto_rawDescGZIP(), []int{1}
}

func (x *Thing) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MoreRoot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An additional attribute to be "flattened" into root.
	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// We can re-use the same Thing message type for another block type that
	// has a different name from HCL's perspective.
	OtherThing *Thing `protobuf:"bytes,2,opt,name=other_thing,json=otherThing,proto3" json:"other_thing,omitempty"`
}

func (x *MoreRoot) Reset() {
	*x = MoreRoot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testschema_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoreRoot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoreRoot) ProtoMessage() {}

func (x *MoreRoot) ProtoReflect() protoreflect.Message {
	mi := &file_testschema_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoreRoot.ProtoReflect.Descriptor instead.
func (*MoreRoot) Descriptor() ([]byte, []int) {
	return file_testschema_proto_rawDescGZIP(), []int{2}
}

func (x *MoreRoot) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *MoreRoot) GetOtherThing() *Thing {
	if x != nil {
		return x.OtherThing
	}
	return nil
}

type WithStringAttr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name represents an HCL attribute
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *WithStringAttr) Reset() {
	*x = WithStringAttr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testschema_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithStringAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithStringAttr) ProtoMessage() {}

func (x *WithStringAttr) ProtoReflect() protoreflect.Message {
	mi := &file_testschema_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithStringAttr.ProtoReflect.Descriptor instead.
func (*WithStringAttr) Descriptor() ([]byte, []int) {
	return file_testschema_proto_rawDescGZIP(), []int{3}
}

func (x *WithStringAttr) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type WithRawDynamicAttr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name represents an HCL attribute
	Raw []byte `protobuf:"bytes,1,opt,name=raw,proto3" json:"raw,omitempty"`
}

func (x *WithRawDynamicAttr) Reset() {
	*x = WithRawDynamicAttr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testschema_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithRawDynamicAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithRawDynamicAttr) ProtoMessage() {}

func (x *WithRawDynamicAttr) ProtoReflect() protoreflect.Message {
	mi := &file_testschema_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithRawDynamicAttr.ProtoReflect.Descriptor instead.
func (*WithRawDynamicAttr) Descriptor() ([]byte, []int) {
	return file_testschema_proto_rawDescGZIP(), []int{4}
}

func (x *WithRawDynamicAttr) GetRaw() []byte {
	if x != nil {
		return x.Raw
	}
	return nil
}

type WithNestedBlockNoLabelsSingleton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A nested block type no labels
	Doodad *WithStringAttr `protobuf:"bytes,1,opt,name=doodad,proto3" json:"doodad,omitempty"`
}

func (x *WithNestedBlockNoLabelsSingleton) Reset() {
	*x = WithNestedBlockNoLabelsSingleton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testschema_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithNestedBlockNoLabelsSingleton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithNestedBlockNoLabelsSingleton) ProtoMessage() {}

func (x *WithNestedBlockNoLabelsSingleton) ProtoReflect() protoreflect.Message {
	mi := &file_testschema_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithNestedBlockNoLabelsSingleton.ProtoReflect.Descriptor instead.
func (*WithNestedBlockNoLabelsSingleton) Descriptor() ([]byte, []int) {
	return file_testschema_proto_rawDescGZIP(), []int{5}
}

func (x *WithNestedBlockNoLabelsSingleton) GetDoodad() *WithStringAttr {
	if x != nil {
		return x.Doodad
	}
	return nil
}

type WithNestedBlockOneLabelSingleton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A nested block type with one label
	Doodad *WithOneBlockLabel `protobuf:"bytes,1,opt,name=doodad,proto3" json:"doodad,omitempty"`
}

func (x *WithNestedBlockOneLabelSingleton) Reset() {
	*x = WithNestedBlockOneLabelSingleton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testschema_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithNestedBlockOneLabelSingleton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithNestedBlockOneLabelSingleton) ProtoMessage() {}

func (x *WithNestedBlockOneLabelSingleton) ProtoReflect() protoreflect.Message {
	mi := &file_testschema_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithNestedBlockOneLabelSingleton.ProtoReflect.Descriptor instead.
func (*WithNestedBlockOneLabelSingleton) Descriptor() ([]byte, []int) {
	return file_testschema_proto_rawDescGZIP(), []int{6}
}

func (x *WithNestedBlockOneLabelSingleton) GetDoodad() *WithOneBlockLabel {
	if x != nil {
		return x.Doodad
	}
	return nil
}

type WithNestedBlockTwoLabelSingleton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A nested block type with one label
	Doodad *WithTwoBlockLabels `protobuf:"bytes,1,opt,name=doodad,proto3" json:"doodad,omitempty"`
}

func (x *WithNestedBlockTwoLabelSingleton) Reset() {
	*x = WithNestedBlockTwoLabelSingleton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testschema_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithNestedBlockTwoLabelSingleton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithNestedBlockTwoLabelSingleton) ProtoMessage() {}

func (x *WithNestedBlockTwoLabelSingleton) ProtoReflect() protoreflect.Message {
	mi := &file_testschema_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithNestedBlockTwoLabelSingleton.ProtoReflect.Descriptor instead.
func (*WithNestedBlockTwoLabelSingleton) Descriptor() ([]byte, []int) {
	return file_testschema_proto_rawDescGZIP(), []int{7}
}

func (x *WithNestedBlockTwoLabelSingleton) GetDoodad() *WithTwoBlockLabels {
	if x != nil {
		return x.Doodad
	}
	return nil
}

type WithNestedBlockNoLabelsRepeated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A nested block type no labels
	Doodad []*WithStringAttr `protobuf:"bytes,1,rep,name=doodad,proto3" json:"doodad,omitempty"`
}

func (x *WithNestedBlockNoLabelsRepeated) Reset() {
	*x = WithNestedBlockNoLabelsRepeated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testschema_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithNestedBlockNoLabelsRepeated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithNestedBlockNoLabelsRepeated) ProtoMessage() {}

func (x *WithNestedBlockNoLabelsRepeated) ProtoReflect() protoreflect.Message {
	mi := &file_testschema_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithNestedBlockNoLabelsRepeated.ProtoReflect.Descriptor instead.
func (*WithNestedBlockNoLabelsRepeated) Descriptor() ([]byte, []int) {
	return file_testschema_proto_rawDescGZIP(), []int{8}
}

func (x *WithNestedBlockNoLabelsRepeated) GetDoodad() []*WithStringAttr {
	if x != nil {
		return x.Doodad
	}
	return nil
}

type WithNestedBlockOneLabelRepeated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A nested block type with one label
	Doodad []*WithOneBlockLabel `protobuf:"bytes,1,rep,name=doodad,proto3" json:"doodad,omitempty"`
}

func (x *WithNestedBlockOneLabelRepeated) Reset() {
	*x = WithNestedBlockOneLabelRepeated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testschema_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithNestedBlockOneLabelRepeated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithNestedBlockOneLabelRepeated) ProtoMessage() {}

func (x *WithNestedBlockOneLabelRepeated) ProtoReflect() protoreflect.Message {
	mi := &file_testschema_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithNestedBlockOneLabelRepeated.ProtoReflect.Descriptor instead.
func (*WithNestedBlockOneLabelRepeated) Descriptor() ([]byte, []int) {
	return file_testschema_proto_rawDescGZIP(), []int{9}
}

func (x *WithNestedBlockOneLabelRepeated) GetDoodad() []*WithOneBlockLabel {
	if x != nil {
		return x.Doodad
	}
	return nil
}

type WithNestedBlockTwoLabelRepeated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A nested block type with one label
	Doodad []*WithTwoBlockLabels `protobuf:"bytes,1,rep,name=doodad,proto3" json:"doodad,omitempty"`
}

func (x *WithNestedBlockTwoLabelRepeated) Reset() {
	*x = WithNestedBlockTwoLabelRepeated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testschema_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithNestedBlockTwoLabelRepeated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithNestedBlockTwoLabelRepeated) ProtoMessage() {}

func (x *WithNestedBlockTwoLabelRepeated) ProtoReflect() protoreflect.Message {
	mi := &file_testschema_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithNestedBlockTwoLabelRepeated.ProtoReflect.Descriptor instead.
func (*WithNestedBlockTwoLabelRepeated) Descriptor() ([]byte, []int) {
	return file_testschema_proto_rawDescGZIP(), []int{10}
}

func (x *WithNestedBlockTwoLabelRepeated) GetDoodad() []*WithTwoBlockLabels {
	if x != nil {
		return x.Doodad
	}
	return nil
}

type WithOneBlockLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Single "name" label
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Another field in case we also want to test attribute decoding
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
}

func (x *WithOneBlockLabel) Reset() {
	*x = WithOneBlockLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testschema_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithOneBlockLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithOneBlockLabel) ProtoMessage() {}

func (x *WithOneBlockLabel) ProtoReflect() protoreflect.Message {
	mi := &file_testschema_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithOneBlockLabel.ProtoReflect.Descriptor instead.
func (*WithOneBlockLabel) Descriptor() ([]byte, []int) {
	return file_testschema_proto_rawDescGZIP(), []int{11}
}

func (x *WithOneBlockLabel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WithOneBlockLabel) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

type WithTwoBlockLabels struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Another field in case we also want to test attribute decoding
	Nickname string `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
}

func (x *WithTwoBlockLabels) Reset() {
	*x = WithTwoBlockLabels{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testschema_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithTwoBlockLabels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithTwoBlockLabels) ProtoMessage() {}

func (x *WithTwoBlockLabels) ProtoReflect() protoreflect.Message {
	mi := &file_testschema_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithTwoBlockLabels.ProtoReflect.Descriptor instead.
func (*WithTwoBlockLabels) Descriptor() ([]byte, []int) {
	return file_testschema_proto_rawDescGZIP(), []int{12}
}

func (x *WithTwoBlockLabels) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *WithTwoBlockLabels) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WithTwoBlockLabels) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

var File_testschema_proto protoreflect.FileDescriptor

var file_testschema_proto_rawDesc = []byte{
	0x0a, 0x10, 0x74, 0x65, 0x73, 0x74, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0e, 0x68, 0x63, 0x6c, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x1a, 0x09, 0x68, 0x63, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9c, 0x01,
	0x0a, 0x04, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0x82, 0xb5, 0x18, 0x06, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x82, 0xb5, 0x18, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x06,
	0x74, 0x68, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x68,
	0x63, 0x6c, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x54, 0x68,
	0x69, 0x6e, 0x67, 0x42, 0x0b, 0x8a, 0xb5, 0x18, 0x07, 0x0a, 0x05, 0x74, 0x68, 0x69, 0x6e, 0x67,
	0x52, 0x06, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x32, 0x0a, 0x04, 0x6d, 0x6f, 0x72, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x63, 0x6c, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x4d, 0x6f, 0x72, 0x65, 0x52, 0x6f, 0x6f, 0x74,
	0x42, 0x04, 0xa0, 0xb5, 0x18, 0x01, 0x52, 0x04, 0x6d, 0x6f, 0x72, 0x65, 0x22, 0x27, 0x0a, 0x05,
	0x54, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0x92, 0xb5, 0x18, 0x06, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x78, 0x0a, 0x08, 0x4d, 0x6f, 0x72, 0x65, 0x52, 0x6f, 0x6f,
	0x74, 0x12, 0x21, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x0b, 0x82, 0xb5, 0x18, 0x07, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x49, 0x0a, 0x0b, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x74, 0x68,
	0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x68, 0x63, 0x6c, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x54, 0x68, 0x69, 0x6e, 0x67,
	0x42, 0x11, 0x8a, 0xb5, 0x18, 0x0d, 0x0a, 0x0b, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x74, 0x68,
	0x69, 0x6e, 0x67, 0x52, 0x0a, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x22,
	0x3c, 0x0a, 0x0e, 0x57, 0x69, 0x74, 0x68, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x74, 0x74,
	0x72, 0x12, 0x2a, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x16, 0x82, 0xb5, 0x18, 0x06, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x82, 0xb5, 0x18, 0x08, 0x1a,
	0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x40, 0x0a,
	0x12, 0x57, 0x69, 0x74, 0x68, 0x52, 0x61, 0x77, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x41,
	0x74, 0x74, 0x72, 0x12, 0x2a, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x42, 0x18, 0x82, 0xb5, 0x18, 0x05, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x82, 0xb5, 0x18, 0x05, 0x1a,
	0x03, 0x61, 0x6e, 0x79, 0x82, 0xb5, 0x18, 0x02, 0x20, 0x02, 0x52, 0x03, 0x72, 0x61, 0x77, 0x22,
	0x68, 0x0a, 0x20, 0x57, 0x69, 0x74, 0x68, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x4e, 0x6f, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x74, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x06, 0x64, 0x6f, 0x6f, 0x64, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x63, 0x6c, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x41,
	0x74, 0x74, 0x72, 0x42, 0x0c, 0x8a, 0xb5, 0x18, 0x08, 0x0a, 0x06, 0x64, 0x6f, 0x6f, 0x64, 0x61,
	0x64, 0x52, 0x06, 0x64, 0x6f, 0x6f, 0x64, 0x61, 0x64, 0x22, 0x6b, 0x0a, 0x20, 0x57, 0x69, 0x74,
	0x68, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4f, 0x6e, 0x65, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x6f, 0x6e, 0x12, 0x47, 0x0a,
	0x06, 0x64, 0x6f, 0x6f, 0x64, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x68, 0x63, 0x6c, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x57,
	0x69, 0x74, 0x68, 0x4f, 0x6e, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x42, 0x0c, 0x8a, 0xb5, 0x18, 0x08, 0x0a, 0x06, 0x64, 0x6f, 0x6f, 0x64, 0x61, 0x64, 0x52, 0x06,
	0x64, 0x6f, 0x6f, 0x64, 0x61, 0x64, 0x22, 0x6c, 0x0a, 0x20, 0x57, 0x69, 0x74, 0x68, 0x4e, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x77, 0x6f, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x06, 0x64, 0x6f,
	0x6f, 0x64, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x63, 0x6c,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x57, 0x69, 0x74, 0x68,
	0x54, 0x77, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x42, 0x0c,
	0x8a, 0xb5, 0x18, 0x08, 0x0a, 0x06, 0x64, 0x6f, 0x6f, 0x64, 0x61, 0x64, 0x52, 0x06, 0x64, 0x6f,
	0x6f, 0x64, 0x61, 0x64, 0x22, 0x67, 0x0a, 0x1f, 0x57, 0x69, 0x74, 0x68, 0x4e, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x6f, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x44, 0x0a, 0x06, 0x64, 0x6f, 0x6f, 0x64, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x63, 0x6c, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x41, 0x74, 0x74, 0x72, 0x42, 0x0c, 0x8a, 0xb5, 0x18, 0x08, 0x0a, 0x06, 0x64,
	0x6f, 0x6f, 0x64, 0x61, 0x64, 0x52, 0x06, 0x64, 0x6f, 0x6f, 0x64, 0x61, 0x64, 0x22, 0x6a, 0x0a,
	0x1f, 0x57, 0x69, 0x74, 0x68, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x4f, 0x6e, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x47, 0x0a, 0x06, 0x64, 0x6f, 0x6f, 0x64, 0x61, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x68, 0x63, 0x6c, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x6e, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x42, 0x0c, 0x8a, 0xb5, 0x18, 0x08, 0x0a, 0x06, 0x64, 0x6f, 0x6f, 0x64, 0x61,
	0x64, 0x52, 0x06, 0x64, 0x6f, 0x6f, 0x64, 0x61, 0x64, 0x22, 0x6b, 0x0a, 0x1f, 0x57, 0x69, 0x74,
	0x68, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x77, 0x6f, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x48, 0x0a, 0x06,
	0x64, 0x6f, 0x6f, 0x64, 0x61, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68,
	0x63, 0x6c, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x57, 0x69,
	0x74, 0x68, 0x54, 0x77, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x42, 0x0c, 0x8a, 0xb5, 0x18, 0x08, 0x0a, 0x06, 0x64, 0x6f, 0x6f, 0x64, 0x61, 0x64, 0x52, 0x06,
	0x64, 0x6f, 0x6f, 0x64, 0x61, 0x64, 0x22, 0x6b, 0x0a, 0x11, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x6e,
	0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x92, 0xb5, 0x18, 0x06, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a, 0x82,
	0xb5, 0x18, 0x0a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x82, 0xb5, 0x18,
	0x08, 0x1a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x12, 0x57, 0x69, 0x74, 0x68, 0x54, 0x77, 0x6f, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x1e, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x92, 0xb5, 0x18, 0x06, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x92, 0xb5, 0x18, 0x06, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a, 0x82, 0xb5,
	0x18, 0x0a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x82, 0xb5, 0x18, 0x08,
	0x1a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x61, 0x70, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x6d, 0x61, 0x72, 0x74, 0x2f,
	0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x68, 0x63, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x68, 0x63, 0x6c, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x74, 0x65,
	0x73, 0x74, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_testschema_proto_rawDescOnce sync.Once
	file_testschema_proto_rawDescData = file_testschema_proto_rawDesc
)

func file_testschema_proto_rawDescGZIP() []byte {
	file_testschema_proto_rawDescOnce.Do(func() {
		file_testschema_proto_rawDescData = protoimpl.X.CompressGZIP(file_testschema_proto_rawDescData)
	})
	return file_testschema_proto_rawDescData
}

var file_testschema_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_testschema_proto_goTypes = []interface{}{
	(*Root)(nil),                             // 0: hcl.testschema.Root
	(*Thing)(nil),                            // 1: hcl.testschema.Thing
	(*MoreRoot)(nil),                         // 2: hcl.testschema.MoreRoot
	(*WithStringAttr)(nil),                   // 3: hcl.testschema.WithStringAttr
	(*WithRawDynamicAttr)(nil),               // 4: hcl.testschema.WithRawDynamicAttr
	(*WithNestedBlockNoLabelsSingleton)(nil), // 5: hcl.testschema.WithNestedBlockNoLabelsSingleton
	(*WithNestedBlockOneLabelSingleton)(nil), // 6: hcl.testschema.WithNestedBlockOneLabelSingleton
	(*WithNestedBlockTwoLabelSingleton)(nil), // 7: hcl.testschema.WithNestedBlockTwoLabelSingleton
	(*WithNestedBlockNoLabelsRepeated)(nil),  // 8: hcl.testschema.WithNestedBlockNoLabelsRepeated
	(*WithNestedBlockOneLabelRepeated)(nil),  // 9: hcl.testschema.WithNestedBlockOneLabelRepeated
	(*WithNestedBlockTwoLabelRepeated)(nil),  // 10: hcl.testschema.WithNestedBlockTwoLabelRepeated
	(*WithOneBlockLabel)(nil),                // 11: hcl.testschema.WithOneBlockLabel
	(*WithTwoBlockLabels)(nil),               // 12: hcl.testschema.WithTwoBlockLabels
}
var file_testschema_proto_depIdxs = []int32{
	1,  // 0: hcl.testschema.Root.things:type_name -> hcl.testschema.Thing
	2,  // 1: hcl.testschema.Root.more:type_name -> hcl.testschema.MoreRoot
	1,  // 2: hcl.testschema.MoreRoot.other_thing:type_name -> hcl.testschema.Thing
	3,  // 3: hcl.testschema.WithNestedBlockNoLabelsSingleton.doodad:type_name -> hcl.testschema.WithStringAttr
	11, // 4: hcl.testschema.WithNestedBlockOneLabelSingleton.doodad:type_name -> hcl.testschema.WithOneBlockLabel
	12, // 5: hcl.testschema.WithNestedBlockTwoLabelSingleton.doodad:type_name -> hcl.testschema.WithTwoBlockLabels
	3,  // 6: hcl.testschema.WithNestedBlockNoLabelsRepeated.doodad:type_name -> hcl.testschema.WithStringAttr
	11, // 7: hcl.testschema.WithNestedBlockOneLabelRepeated.doodad:type_name -> hcl.testschema.WithOneBlockLabel
	12, // 8: hcl.testschema.WithNestedBlockTwoLabelRepeated.doodad:type_name -> hcl.testschema.WithTwoBlockLabels
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_testschema_proto_init() }
func file_testschema_proto_init() {
	if File_testschema_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_testschema_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Root); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testschema_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Thing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testschema_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoreRoot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testschema_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithStringAttr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testschema_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithRawDynamicAttr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testschema_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithNestedBlockNoLabelsSingleton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testschema_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithNestedBlockOneLabelSingleton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testschema_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithNestedBlockTwoLabelSingleton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testschema_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithNestedBlockNoLabelsRepeated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testschema_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithNestedBlockOneLabelRepeated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testschema_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithNestedBlockTwoLabelRepeated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testschema_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithOneBlockLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testschema_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithTwoBlockLabels); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_testschema_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_testschema_proto_goTypes,
		DependencyIndexes: file_testschema_proto_depIdxs,
		MessageInfos:      file_testschema_proto_msgTypes,
	}.Build()
	File_testschema_proto = out.File
	file_testschema_proto_rawDesc = nil
	file_testschema_proto_goTypes = nil
	file_testschema_proto_depIdxs = nil
}
